General:
git help (manual)
git status (check current status of the repository)
git log (shows current HEAD location, commits and history of the files withing git repository)

Diff:
git diff (to see the difference in file between current state and last commit)
a)git diff <- shows difference between current "untracked" status and last commit  
b)git diff --staged <- shows difference between current "staged" status and last commit
c)git diff *commit_id* <- shows difference between current repository and the one indicated

Reset:
git reset (rollback to the pointed commit: ex. git reset *commit_ID*/HEAD^^ or git reset *commit_ID*/HEAD~2 <- will roll 2 commits back):
a) git reset --soft (mild option, brings the project to the pointed commit and moves the post-sequent commits to "staged" status)
b) git reset --mixed (*no parameter* git reset HEAD^^ = git reset --mixed
HEAD^^, brings the project to the pointed commit and moves the post-sequent commits to "untracked" status)
c) git reset --hard (the strongest option, deletes all of the post-sequent commits)
d) *no parameter/no commit* git reset = git reset --mixed HEAD

Checkout:
git checkout (move between commits without deleting newer commits)
a) git checkout *commit#2_id*
b) git checkout HEAD~2
c) git checkout HEAD^^
c) git checkout master <- move to the main branch
To checkout files in previous commits:
git checkout a0e33627548578d5b94c3b8f4f885303a2cd4eec -- file1 (to see version of the file in provided commit hash)
git checkout --file1 (to see version of the file in last commit/HEAD. only works for "untracked" and "modified" statuses)
git checkout -- .(bring all files to last commit/HEAD)
