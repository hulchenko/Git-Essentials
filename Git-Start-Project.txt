Project start sequence:
mkdir
git init (initializing git within the folder)
touch filename (after creation remains in "untracked" status)
or subl/nano filename (after file change in "modified" status)
git add filename (changing filename status to "staged")
git commit -m "messagehere" (changing filename status to "committed",thus creating a fixed shot/commit, with the action description message in indefinite tense)

General:
git help (manual)
git status (check current status of the repository)
git log (shows current HEAD location, commits and history of the files withing git repository)
git diff (to see the difference in file between current state and last commit)
a)git diff <- shows difference between current "untracked" status and last commit  
b)git diff --staged <- shows difference between current "staged" status and last commit
c)git diff *commit_id* <- shows difference between current repository and the one indicated
git reset (rollback to the pointed commit: ex. git reset *commit_ID*/HEAD^^ or git reset *commit_ID*/HEAD~2 <- will roll 2 commits back):
a) git reset --soft (mild option, brings the project to the pointed commit and moves the post-sequent commits to "staged" status)
b) git reset --mixed (*no parameter* git reset HEAD^^ = git reset --mixed
HEAD^^, brings the project to the pointed commit and moves the post-sequent commits to "untracked" status)
c) git reset --hard (the strongest option, deletes all of the post-sequent commits)
d) *no parameter/no commit* git reset = git reset --mixed HEAD

Other commands:
git add . (adds all files within folder)
git add *.txt (adds all files withing folder with specific file type)
git add dirname/ (add all files in pointed directory)
